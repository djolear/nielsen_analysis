sex = SC7,
children = H17,
adults = D9,
political_party = as.factor(P1),
party_lean = PARTY,
employment10_fac = as.factor(ifelse(year >= 2010, as.factor(EMPLOYMENT2010), NA)),
employment_all =
as.factor(
ifelse(
year %in% c(2008:2009) & !is.na(WP46) & WP46 == 1,
1,
ifelse(
year %in% c(2008:2009) & !is.na(WP46) & WP46 == 2,
0,
ifelse(
year %in% c(2009:2017) & !is.na(WP10200) & WP10200 == 1,
1,
ifelse(
year %in% c(2009:2017) & !is.na(WP10200) & WP10200 == 2 & WP10202 == 1,
1,
ifelse(
year %in% c(2009:2017) & !is.na(WP10200) & WP10200 == 2 & WP10202 == 2,
0,
ifelse(
year == 2009 & !is.na(WP9081) & WP9081 == 1,
1,
ifelse(
year == 2009 & !is.na(WP9081) & WP9081 == 2,
0,
ifelse(
year == 2009 & !is.na(WP8859) & WP8859 == 1,
1,
ifelse(
year == 2009 & !is.na(WP8859) & WP8859 == 2,
0,
NA
)
)
)
)
)
)
)
)
)
),
# Geography
zipcode = as.factor(ZIPCODE),
census_region = as.factor(ZIPCENSUSREGION),
msa = as.factor(MSACODE),
fips_code = as.character(ifelse(year %in% c(2008:2012), fips_code, as.character(FIPS_CODE))),
COMB_WEIGHT = ifelse(year %in% c(2018), WB_WEIGHT, COMB_WEIGHT)
)
return(df)
}
# Select variables
df <- gallup_select(df)
gallup_munge <- function(df) {
df <-
df %>%
mutate(
WP46 = ifelse(year %in% c(2008:2009), WP46, NA),
WP10200 = ifelse(year %in% c(2009:2017), WP10200, NA),
WP10202 = ifelse(year %in% c(2009:2017), WP10202, NA),
WP9081 = ifelse(year %in% c(2009), WP9081, NA),
WP8859 = ifelse(year %in% c(2009), WP8859, NA),
HWB19 = ifelse(year %in% c(2014:2017), HWB19, NA),
HWB1 = ifelse(year %in% c(2014:2017), HWB1, NA),
HWB20 = ifelse(year %in% c(2014:2017), HWB20, NA),
HWB11 = ifelse(year %in% c(2014:2017), HWB11, NA),
HWB2 = ifelse(year %in% c(2014:2017), HWB2, NA),
HWB21 = ifelse(year %in% c(2014:2016), HWB21, NA),
WP83 = ifelse(year %in% c(2014:2016), WP83, NA),
HWB9 = ifelse(year %in% c(2014:2016), HWB9, NA),
HWB22 = ifelse(year %in% c(2014:2016), HWB22, NA),
HWB23 = ifelse(year %in% c(2014:2016), HWB23, NA),
HWB18 = ifelse(year %in% c(2014:2016), HWB18, NA),
HWB10 = ifelse(year %in% c(2014:2016), HWB10, NA),
WP40 = ifelse(year %in% c(2014:2017), WP40, NA),
HWB5 = ifelse(year %in% c(2014:2017), HWB5, NA),
HWB6 = ifelse(year %in% c(2014:2017), HWB6, NA),
M1 = ifelse(year %in% c(2014:2016), M1, NA),
HWB17 = ifelse(year %in% c(2014:2017), HWB17, NA),
HWB14 = ifelse(year %in% c(2014:2017), HWB14, NA),
HWB15 = ifelse(year %in% c(2014:2017), HWB15, NA),
HWB3 = ifelse(year %in% c(2014:2017), HWB3, NA),
HWB4 = ifelse(year %in% c(2014:2017), HWB4, NA)
)
df <-
df %>%
mutate(
# Psychological
comp_satis_std_liv = ifelse(year %in% c(2014:2017), HWB17, NA),
std_living = WP30,
econ = M30,
sr_health = H36,
enough_money = ifelse(year %in% c(2014:2017), HWB5, NA),
goals = ifelse(year %in% c(2014:2017), HWB20, NA),
little_pleasure = ifelse(year %in% c(2014:2017), H45, NA),
active_prod = ifelse(year %in% c(2014:2017), HWB7, NA),
drugs_relax = ifelse(year %in% c(2014:2016), H46, NA),
ladder_now = ifelse(year %in% c(2014:2016), WP16, ifelse(year %in% c(2018), LAD1, NA)),
ladder_5yrs = ifelse(year %in% c(2014:2016), WP18, ifelse(year %in% c(2018), LAD2, NA)),
cl_diff = ladder_5yrs - ladder_now,
economy_getting_better = 4 - WP148,
enjoyment = WP67,
worry = WP69,
sadness = ifelse(year %in% c(2017, 2018), NA, WP70),
stress = WP71,
happiness = ifelse(year %in% c(2018), NA, WP6878),
PURPOSE = ifelse(year %in% c(2014:2018), PURPOSE, NA),
COMMUNITY = ifelse(year %in% c(2014:2018), COMMUNITY, NA),
PHYSICAL = ifelse(year %in% c(2014:2018), PHYSICAL, NA),
FINANCIAL = ifelse(year %in% c(2014:2018), FINANCIAL, NA),
SOCIAL = ifelse(year %in% c(2014:2018), SOCIAL, NA),
WELL_BEING_INDEX = ifelse(year %in% c(2014:2018), WELL_BEING_INDEX, NA),
BAI = ifelse(year %in% c(2008:2013), BAI, NA),
EHI = ifelse(year %in% c(2008:2013), EHI, NA),
HBI = ifelse(year %in% c(2008:2013), HBI, NA),
PHI = ifelse(year %in% c(2008:2013), PHI, NA),
WEI = ifelse(year %in% c(2008:2013), WEI, NA),
THRIVING = ifelse(year %in% c(2008:2013), THRIVING, NA),
# Health behaviors
fruits_veggies = as.numeric(ifelse(H12B < 8, H12B, NA)),
exercise = as.numeric(ifelse(H12A < 8, H12A, NA)),
eat_healthy = as.numeric(M16 == 1, 1, ifelse(M16 == 2, 0, NA)),
smoke = as.numeric(H11 == 1, 1, ifelse(H11 == 2, 0, NA)),
num_alc = ifelse(year %in% c(2014:2016), ALCO1, NA),
# Health
bmi = as.numeric(BMI),
obese = as.factor(OBESE),
sr_health = H36,
hbp = H4A,
diabetes = H4C,
depression = H4D,
# Demographics
income = ifelse(INCOME_SUMMARY < 11, INCOME_SUMMARY, NA),
raw_income =
case_when(
income == 1 ~ 360,
income == 2 ~ 3360,
income == 3 ~ 9000,
income == 4 ~ 18000,
income == 5 ~ 30000,
income == 6 ~ 42000,
income == 7 ~ 54000,
income == 8 ~ 75000,
income == 9 ~ 105000,
income == 10 ~ 120000,
),
education = ifelse(EDUCATION < 7, EDUCATION, NA),
education_fac = as.factor(education),
married =
as.factor(
ifelse(
WP1223 == 6 | WP1223 == 7,
NA,
WP1223
)
),
age = ifelse(WP1220 < 100, WP1220, NA),
race = as.factor(RACE),
sex = SC7,
children = H17,
adults = D9,
political_party = as.factor(P1),
party_lean = PARTY,
employment10_fac = as.factor(ifelse(year >= 2010, as.factor(EMPLOYMENT2010), NA)),
employment_all =
as.factor(
ifelse(
year %in% c(2008:2009) & !is.na(WP46) & WP46 == 1,
1,
ifelse(
year %in% c(2008:2009) & !is.na(WP46) & WP46 == 2,
0,
ifelse(
year %in% c(2009:2017) & !is.na(WP10200) & WP10200 == 1,
1,
ifelse(
year %in% c(2009:2017) & !is.na(WP10200) & WP10200 == 2 & WP10202 == 1,
1,
ifelse(
year %in% c(2009:2017) & !is.na(WP10200) & WP10200 == 2 & WP10202 == 2,
0,
ifelse(
year == 2009 & !is.na(WP9081) & WP9081 == 1,
1,
ifelse(
year == 2009 & !is.na(WP9081) & WP9081 == 2,
0,
ifelse(
year == 2009 & !is.na(WP8859) & WP8859 == 1,
1,
ifelse(
year == 2009 & !is.na(WP8859) & WP8859 == 2,
0,
NA
)
)
)
)
)
)
)
)
)
),
# Geography
zipcode = as.factor(ZIPCODE),
census_region = as.factor(ZIPCENSUSREGION),
msa = as.factor(MSACODE),
fips_code = as.character(ifelse(year %in% c(2008:2012), fips_code, as.character(FIPS_CODE))),
COMB_WEIGHT = ifelse(year %in% c(2018), WB_WEIGHT, ifelse(year %in% c(2008:2017), COMB_WEIGHT, NA))
)
return(df)
}
# Select variables
df <- gallup_select(df)
# Rename and munge variables
df <-
gallup_munge(df)
# Select variables
df <- gallup_select(df)
print(paste0("Select variables for ", df$year[1], " complete."))
df <- median_earnings_all_census_function(df)
print(paste0("Generate census median earnings for ", df$year[1], " complete."))
df <- median_income_gallup_function(df)
print(paste0("Generate gallup median income for ", df$year[1], " complete."))
df <- gallup_join_census_data_function(df, df$year[1])
print(paste0("Attach general census data for ", df$year[1], " complete."))
gallup_write(df)
if (!require("pacman")) install.packages("pacman")
pacman::p_load(
tidyverse,
haven,
lme4,
lm.beta,
sjPlot,
stargazer
)
sinfo <- data.frame(Sys.info())
machine <- sinfo$Sys.info..[4]
machine_path <-
ifelse(
machine %in% c("sussman-rp-mbpro.local", "sussman-rp-mbpro.lan"),
"/Users/djolear/Google Drive/",
"G:/My Drive/"
)
source(paste0(machine_path, "research/projects/niel/nielsen_analysis/relative_status_analysis/food_calories_regression_results_munge.R"))
res <-
read_csv("D:/data/nielsen/tfp_calories_imputed_sc_by_household_quarterly/tfp_calories_imputed_sc_by_household_quarterly_regression_results.csv")
qh_calories_imputed_sc_terms %>%
filter(term == "median_income_var_scale")
qh_calories_imputed_sc_terms %>%
filter(term == "median_income_var_scale") %>%
filter(median_income_var %in% c("median_income_county_scale", "med_inc_niel_avg_scale")) %>%
mutate(median_income_var = factor(median_income_var, labels = c("demo gen", "demo fem", "demo men", "county census"))) %>%
mutate(id_controls = factor(id_controls, labels = c("id controls m.e.", "id controls int."))) %>%
ggplot(aes(year, estimate)) +
geom_col() +
geom_errorbar(aes(ymin = estimate - std.error, ymax = estimate + std.error), width = 0.1) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1)) +
facet_grid(id_controls ~ median_income_var)
qh_calories_imputed_sc_terms %>%
filter(term == "median_income_var_scale") %>%
filter(median_income_var %in% c("median_income_county_scale", "med_inc_niel_avg_scale")) %>%
mutate(median_income_var = factor(median_income_var, labels = c("demo gen", "county census"))) %>%
mutate(id_controls = factor(id_controls, labels = c("id controls m.e.", "id controls int."))) %>%
ggplot(aes(year, estimate)) +
geom_col() +
geom_errorbar(aes(ymin = estimate - std.error, ymax = estimate + std.error), width = 0.1) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1)) +
facet_grid(id_controls ~ median_income_var)
qh_calories_imputed_sc_terms %>%
filter(term == "median_income_var_scale") %>%
filter(median_income_var %in% c("median_income_county_scale", "med_inc_niel_avg_scale"))
qh_calories_imputed_sc_terms %>%
filter(term == "median_income_var_scale") %>%
filter(median_income_var %in% c("median_income_county_scale", "med_inc_niel_avg_scale")) %>%
mutate(median_income_var = factor(median_income_var, labels = c("demo gen", "county census"))) %>%
mutate(id_controls = factor(id_controls, labels = c("id controls m.e.", "id controls int."))) %>%
ggplot(aes(year, estimate)) +
geom_col() +
geom_errorbar(aes(ymin = estimate - std.error, ymax = estimate + std.error), width = 0.1) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1)) +
facet_grid(id_controls ~ median_income_var)
qh_calories_imputed_sc_terms %>%
filter(term == "median_income_var_scale") %>%
filter(median_income_var %in% c("median_income_county_scale", "med_inc_niel_avg_scale")) %>%
mutate(median_income_var = factor(median_income_var, labels = c("demo gen", "county census"))) %>%
mutate(id_controls = factor(id_controls, labels = c("id controls m.e.", "id controls int."))
)
qh_calories_imputed_sc_terms %>%
filter(term == "median_income_var_scale") %>%
filter(median_income_var %in% c("median_income_county_scale", "med_inc_niel_avg_scale")) %>%
mutate(median_income_var = factor(median_income_var, labels = c("demo gen", "county census"))) %>%
mutate(id_controls = factor(id_controls, labels = c("id controls m.e.", "id controls int.")))
res %>%
ungroup() %>%
filter(med_inc_var == "median_income_county_scale" & int == "no") %>%
dplyr::select(key, median_income_var_scale) %>%
group_by(key) %>%
summarise(
median = median(median_income_var_scale, na.rm = TRUE)
) %>%
ggplot(aes(fct_reorder(key, median), median)) +
geom_col() + labs(y = "median standardized beta", x = "tfp category") +
coord_flip()
res %>%
ungroup() %>%
filter(med_inc_var == "med_inc_niel_female_scale" & int == "no") %>%
dplyr::select(key, median_income_var_scale) %>%
group_by(key) %>%
summarise(
median = median(median_income_var_scale, na.rm = TRUE)
) %>%
ggplot(aes(fct_reorder(key, median), median)) +
geom_col() + labs(y = "median standardized beta", x = "tfp category") +
coord_flip()
df <- read_csv("D:\data\gallup\exports\dfg_rs.csv")
df <- read_csv("D:/data/gallup/exports/dfg_rs.csv")
df <- read_rds("D:/data/gallup/exports/dfg_rs.rds")
df %>%
count(employment_all)
df <-
df1 %>%
left_join(
df2
) %>%
mutate(
year = 2018
)
df$SC7
df %>% count(SC7)
glimpse(df)
df2 <- read_sav("G:/My Drive/research/projects/gallup/US_TRACKER_2018_DATA_PE_STATA and SPSS/US_PE_DAILY_2018_DATA.SAV")
df2 <- read_sav("D:/data/gallup/US_TRACKER_2018_DATA_PE_STATA and SPSS/US_PE_DAILY_2018_DATA.SAV")
df2 <- read_sav("D:/data/gallup/raw/US_TRACKER_2018_DATA_PE_STATA and SPSS/US_PE_DAILY_2018_DATA.SAV")
df2$SC7
df1 <- read_sav("D:/data/gallup/raw/projects/gallup/US_TRACKER_2018_DATA_WB_STATA and SPSS/US_WB_DAILY_2018_DATA.SAV")
df2 <- read_sav("D:/data/gallup/raw/US_TRACKER_2018_DATA_PE_STATA and SPSS/US_PE_DAILY_2018_DATA.SAV")
df1 <- read_sav("D:/data/gallup/raw/US_TRACKER_2018_DATA_WB_STATA and SPSS/US_WB_DAILY_2018_DATA.SAV")
df2 <- read_sav("D:/data/gallup/raw/US_TRACKER_2018_DATA_PE_STATA and SPSS/US_PE_DAILY_2018_DATA.SAV")
df <-
df1 %>%
left_join(
df2
) %>%
mutate(
year = 2018
)
df$SC7
df <-
df1 %>%
left_join(
df2,
by = "MOTHERLODE_ID"
) %>%
mutate(
year = 2018
)
df$SC7
df2 <- read_dta("D:/data/gallup/raw/US_TRACKER_2018_DATA_PE_STATA and SPSS/US_PE_DAILY_2018_DATA.dta")
df1 <- read_dta("D:/data/gallup/raw/US_TRACKER_2018_DATA_WB_STATA and SPSS/US_WB_DAILY_2018_DATA.dta")
df <-
df1 %>%
left_join(
df2,
by = "MOTHERLODE_ID"
) %>%
mutate(
year = 2018
)
df$SC7
# Description:
###################
## Load Packages ##
###################
if (!require("pacman")) install.packages("pacman")
pacman::p_load(
tidyverse,
haven
)
###############
## Set Paths ##
###############
sinfo <- data.frame(Sys.info())
machine <- sinfo$Sys.info..[4]
machine_path <-
ifelse(
machine %in% c("sussman-rp-mbpro.local", "sussman-rp-mbpro.lan"),
"/Users/djolear/Google Drive/",
"G:/My Drive/"
)
data_path <- "D:/data/gallup/raw/US Daily SPSS Files/"
####################
## Load Functions ##
####################
source(paste0(machine_path, "research/projects/gallup/gallup_analysis_1/relative_status_analysis/munge_data/gallup_munge_functions.R"))
file_list <-
data.frame(
file_list = list.files(path = paste0(data_path))
)
file_list <-
file_list %>%
filter(
str_detect(file_list, ".SAV")
)
for(i in 1:length(file_list$file_list)) {
assign(
paste0("dfg_", str_extract(file_list$file_list[i], "[[:digit:]]+")),
gallup_read_munge_write(
paste0(data_path, file_list$file_list[i]),
as.numeric(str_extract(file_list$file_list[i], "[[:digit:]]+"))
)
)
print(paste0("dfg_", str_extract(file_list$file_list[i], "[[:digit:]]+"), " complete."))
}
dfg_rs %>% count(employment_all)
dfg_2010 %>% count(employment_all)
dfg_2010 %>% dplyr::count(employment_all)
dfg_2008$emp
glimpse(dfg_2008)
sinfo <- data.frame(Sys.info())
machine <- sinfo$Sys.info..[4]
machine_path <-
ifelse(
machine %in% c("sussman-rp-mbpro.local", "sussman-rp-mbpro.lan"),
"/Users/djolear/Google Drive/",
"G:/My Drive/"
)
data_path <- "research/projects/gallup/gallup_data/relative_status/"
source(paste0(machine_path, "research/projects/gallup/gallup_analysis_1/relative_status_analysis/munge_data/standardize_vars_function.R"))
file_list <-
data.frame(
file_list = list.files(path = "D:/data/gallup/exports/")
)
file_list <-
file_list %>%
filter(
str_detect(file_list, ".rds")
)  %>% slice(1:11)
file_list <-
data.frame(
file_list = list.files(path = "D:/data/gallup/exports/")
)
file_list <-
file_list %>%
filter(
str_detect(file_list, ".rds")
)  %>% slice(1:10)
for(i in 1:length(file_list$file_list)) {
assign(
paste0("dfg_", str_extract(file_list$file_list[i], "[[:digit:]]+")),
read_rds(paste0("D:/data/gallup/exports/", file_list$file_list[i]))
)
print(paste0("load dfg_", str_extract(file_list$file_list[i], "[[:digit:]]+"), " complete."))
}
dfg_rs <-
bind_rows(
dfg_2008,
dfg_2009,
dfg_2010,
dfg_2011,
dfg_2012,
dfg_2013,
dfg_2014,
dfg_2015,
dfg_2016,
dfg_2017,
dfg_2018
)
dfg_rs <-
bind_rows(
dfg_2008,
dfg_2009,
dfg_2010,
dfg_2011,
dfg_2012,
dfg_2013,
dfg_2014,
dfg_2015,
dfg_2016,
dfg_2017,
#dfg_2018
)
dfg_rs %>% count(employment_all)
dfg_rs %>% count(sex)
dfg_rs <-
dfg_rs %>%
mutate_at(
vars(
year,
employment10_fac,
employment_all
),
as.factor
) %>%
mutate(
enjoyment = ifelse(enjoyment == 1, -1, ifelse(enjoyment == 2, 1, NA)),
happiness = ifelse(happiness == 1,- 1, ifelse(happiness == 2, 1, NA)),
stress = ifelse(stress == 1, 1, ifelse(stress == 2, -1, NA)),
worry = ifelse(worry == 1, 1, ifelse(worry == 2, -1, NA)),
sadness = ifelse(sadness == 1, 1, ifelse(sadness == 2, -1, NA))
) %>%
mutate(
neg_aff = enjoyment + happiness + stress + worry + sadness
)
dfg_rs <- gallup_scale_function(dfg_rs)
write_rds(dfg_rs, paste0("D:/data/gallup/exports/", "dfg_rs.rds"))
write_csv(dfg_rs, paste0("D:/data/gallup/exports/", "dfg_rs.csv"))
